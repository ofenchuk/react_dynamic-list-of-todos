{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setTodo","selectedTodo","className","map","todo","id","completed","title","onClick","type","TodoFilter","React","memo","onSelectChange","onQueryChange","query","onChange","event","target","value","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todosList","useState","user","setUser","filter","todoItem","useEffect","userId","person","href","name","App","setTodosList","setSelectedTodo","selectFilter","setSelectFilter","setQuery","handleSelectTodo","filteredTodoList","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa2eba50.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setTodo: (id: number) => void;\n  selectedTodo: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {/* <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n\n        {todos.map((todo: Todo) => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={\n              todo.id === selectedTodo ? 'has-background-info-light' : ''\n            }\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                onClick={() => setTodo(todo.id)}\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n        {/* <tr data-cy=\"todo\" className=\"has-background-info-light\">\n          <td className=\"is-vcentered\">2</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">\n              quis ut nam facilis et officia qui\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye-slash\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">1</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">delectus aut autem</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">6</td>\n          <td className=\"is-vcentered\" />\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-danger\">\n              qui ullam ratione quibusdam voluptatem quia omnis\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">8</td>\n          <td className=\"is-vcentered\">\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr> */}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\n\ntype Props = {\n  onSelectChange: (condition: boolean | null) => void;\n  onQueryChange: (query: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(\n  ({ onSelectChange, onQueryChange, query }) => {\n    const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n      switch (event.target.value) {\n        case 'all':\n          onSelectChange(null);\n          break;\n\n        case 'active':\n          onSelectChange(false);\n          break;\n\n        case 'completed':\n          onSelectChange(true);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select onChange={handleSelect} data-cy=\"statusSelect\">\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            value={query}\n            onChange={(event) => onQueryChange(event.target.value)}\n            className=\"input\"\n            placeholder=\"Search...\"\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {query.length > 0 && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => onQueryChange('')}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    );\n  },\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: number;\n  setTodo: (id: number) => void;\n  todosList: Todo[];\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  todosList,\n  setTodo,\n}) => {\n  const [user, setUser] = React.useState<User>();\n\n  const todo = todosList.filter((todoItem) => todoItem.id === selectedTodo);\n\n  useEffect(() => {\n    getUser(todo[0].userId).then((person) => setUser(person));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo[0].id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              onClick={() => setTodo(0)}\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo[0].title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={\n                  todo[0].completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {todo[0].completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todosList, setTodosList] = React.useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = React.useState<number>(0);\n  const [selectFilter, setSelectFilter] = React.useState<boolean | null>(null);\n\n  const [query, setQuery] = React.useState<string>('');\n\n  const handleSelectTodo = (id: number) => {\n    setSelectedTodo(id);\n  };\n\n  let filteredTodoList = todosList.filter((todo) => (selectFilter === null ? todo : todo.completed === selectFilter));\n\n  filteredTodoList = filteredTodoList.filter((todo) => {\n    return todo.title.toLowerCase().includes(query.toLowerCase());\n  });\n\n  React.useEffect(() => {\n    getTodos().then((todos) => setTodosList(todos));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSelectChange={setSelectFilter}\n                onQueryChange={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosList.length > 0 ? (\n                <TodoList\n                  todos={filteredTodoList}\n                  selectedTodo={selectedTodo}\n                  setTodo={handleSelectTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== 0 && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          todosList={filteredTodoList}\n          setTodo={handleSelectTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}